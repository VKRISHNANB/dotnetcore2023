// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Temples.Data;

namespace Temples.DataFirstMigration.Migrations
{
    [DbContext(typeof(TempleDB))]
    [Migration("20200302100545_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Temples.Data.Kadavul", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Kadavuls");
                });

            modelBuilder.Entity("Temples.Data.Sannidhi", b =>
                {
                    b.Property<int>("SannidhiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KadavulId")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SannidhiId");

                    b.HasIndex("KadavulId")
                        .IsUnique();

                    b.ToTable("Sannidhis");
                });

            modelBuilder.Entity("Temples.Data.Temple", b =>
                {
                    b.Property<int>("TempleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TempleId");

                    b.ToTable("Temples");
                });

            modelBuilder.Entity("Temples.Data.TempleKadavulDetails", b =>
                {
                    b.Property<int>("TempleId")
                        .HasColumnType("int");

                    b.Property<int>("KadavulId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TempleId", "KadavulId");

                    b.HasIndex("KadavulId");

                    b.ToTable("TempleSannidhiDetails");
                });

            modelBuilder.Entity("Temples.Data.Sannidhi", b =>
                {
                    b.HasOne("Temples.Data.Kadavul", null)
                        .WithOne("Sannidhi")
                        .HasForeignKey("Temples.Data.Sannidhi", "KadavulId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Temples.Data.TempleKadavulDetails", b =>
                {
                    b.HasOne("Temples.Data.Kadavul", null)
                        .WithMany("Temples")
                        .HasForeignKey("KadavulId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Temples.Data.Temple", null)
                        .WithMany("Sannidhis")
                        .HasForeignKey("TempleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
